$ git clone -b <分支名> <仓库地址>
	Git克隆某一个特定的远程分支

$ git commit --amend
	修改最后一次提交：有时候我们提交完了才发现漏掉了几个文件没有加，或者提交信息写错了。想要撤消刚才的提交操作，可以使用 --amend选项重新提交：

$ git pull --rebase origin <分支名>
	拉取

$ git push origin <分支名>
	推送
$ git push origin serverfix:serferfix
	上传我本地的 serverfix 分支到远程仓库中去，仍旧称它为 serverfix 分支
$ git push origin serverfix:awesomebranch
	把本地分支推送到某个命名不同的远程分支

$ git log  --author=””
	查询某人的提交记录
$ git log <file>
	查询某文件的提交记录
$ git log origin/master --oneline -n 3
	查看远程仓库的日志

$ git reflog 
	可以查看所有分支的所有操作记录（包括（包括commit和reset的操作），包括已经被删除的commit记录，git log则不能察看已经删除了的commit记录

$ git fetch origin
	刷新远程仓库的信息

$ git add <file>
	将修改添加到暂存区
$ git add .
	将所有修改添加到暂存区

$ git checkout -- <file>
	丢弃未暂存的某个文件的修改
$ git checkout .
	丢弃未暂存的所有文件的修改

$ git checkout <name>
	切换分支
$ git checkout -b <name>
	创建+切换分支
$ git checkout -b [分支名] [远程名]/[分支名]
$ git checkout -b sf origin/serverfix
	现在你的本地分支 sf 会自动向 origin/serverfix 推送和抓取数据了

$ git branch
	查看分支
$ git branch <name>
	创建分支
$ git branch -v
	查看各个分支最后一个提交对象的信息
$ git branch --merged
	查看哪些分支已被并入当前分支
$ git branch --no-merged
	查看还未合并进来的分支
$ git branch -d <name>
	删除本地分支
$ git branch -D <name>
	强制删除本地分支

$ git push [远程名] :[分支名]
	删除远程分支

$ git merge <name>
	合并某分支到当前分支

$ git diff HEAD -- <name>
	查看工作区和版本库里面最新版本的区别

